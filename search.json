[{"path":"/articles/metabolic_pathway_enrichment.html","id":"install-ocean","dir":"Articles","previous_headings":"","what":"Install ocEAn","title":"Metabolite Enrichment Analysis","text":"","code":"library(devtools) install_github(\"saezlab/ocean\")"},{"path":"/articles/metabolic_pathway_enrichment.html","id":"tutorial-with-a-kidney-cancer-toy-metabolomic-dataset","dir":"Articles","previous_headings":"","what":"Tutorial with a kidney cancer toy metabolomic dataset","title":"Metabolite Enrichment Analysis","text":"","code":"library(ocean) library(decoupleR) library(dplyr)"},{"path":"/articles/metabolic_pathway_enrichment.html","id":"differential-analysis","dir":"Articles","previous_headings":"","what":"Differential analysis","title":"Metabolite Enrichment Analysis","text":"","code":"unique(toy_targets$condition) comparisons <- list('tumorVsHealthy' = c(1,-2))  limmaRes <- runLimma(measurements = toy_metabolomic_data,                      targets = toy_targets,                      comparisons = comparisons)"},{"path":"/articles/metabolic_pathway_enrichment.html","id":"format-differential-analysis-result","dir":"Articles","previous_headings":"","what":"Format differential analysis result","title":"Metabolite Enrichment Analysis","text":"","code":"t_table <- ttop_list_to_t_table(   limma_res_to_ttop_list(limma_res = limmaRes,                          comp_names = names(comparisons),                          number = length(toy_metabolomic_data[,1]),                          adjust.method = \"fdr\"))  t_table <- t_table_metactivity_input_formater(   metabolomic_t_table = t_table,   mapping_table = mapping_table,   affixes = c(\"c\",\"l\",\"x\",\"m\",\"e\",\"n\",\"r\") )"},{"path":"/articles/metabolic_pathway_enrichment.html","id":"select-pathways","dir":"Articles","previous_headings":"","what":"Select pathways","title":"Metabolite Enrichment Analysis","text":"Select pathways recon2_redhuman$pathway included network","code":"all_pathways <- as.vector(unique(recon2_redhuman$pathway)) all_pathways <- all_pathways[!is.na(all_pathways)]"},{"path":"/articles/metabolic_pathway_enrichment.html","id":"create-a-reaction-network-from-the-recon_redhuman-model-metabolites-enzymes","dir":"Articles","previous_headings":"","what":"Create a reaction network from the recon_redhuman model (metabolites & enzymes)","title":"Metabolite Enrichment Analysis","text":"","code":"reaction_network <- model_to_pathway_sif(pathway_to_keep = all_pathways$X1)"},{"path":"/articles/metabolic_pathway_enrichment.html","id":"translate-enzyme-complexes-by-mapping-identifiers-to-names","dir":"Articles","previous_headings":"","what":"Translate enzyme complexes by mapping identifiers to names","title":"Metabolite Enrichment Analysis","text":"","code":"reaction_network <- translate_complexes(reaction_network)"},{"path":"/articles/metabolic_pathway_enrichment.html","id":"create-data-frame-metabolite---affiliated-enzyme-instead-of-source-target","dir":"Articles","previous_headings":"","what":"Create data frame metabolite - affiliated enzyme instead of source-target","title":"Metabolite Enrichment Analysis","text":"","code":"metabolites <- rearrange_dataframe(reaction_network)"},{"path":"/articles/metabolic_pathway_enrichment.html","id":"remove-compartment-information-and-cpd-to-get-pure-kegg-ids","dir":"Articles","previous_headings":"","what":"Remove compartment information and “cpd:” to get pure KEGG IDs","title":"Metabolite Enrichment Analysis","text":"","code":"metabolites$metabolites <- get_pure_kegg_ids(metabolites$metabolites) metabolites <- distinct(metabolites)  #keep only unique rows"},{"path":"/articles/metabolic_pathway_enrichment.html","id":"map-pathways-to-metabolites","dir":"Articles","previous_headings":"","what":"Map pathways to metabolites","title":"Metabolite Enrichment Analysis","text":"","code":"metabolites_pathway_df <- map_pathways_to_metabolites(metabolites)"},{"path":"/articles/metabolic_pathway_enrichment.html","id":"save-metabolites-pathways-data-frame","dir":"Articles","previous_headings":"","what":"Save metabolites-pathways data frame","title":"Metabolite Enrichment Analysis","text":"","code":"#write.csv(metabolites_pathway_df, \"./results/metabolites_pathway_df.csv\")"},{"path":"/articles/metabolic_pathway_enrichment.html","id":"metabolite-enrichment-analysis-with-package-decoupler","dir":"Articles","previous_headings":"","what":"Metabolite enrichment analysis with package decoupleR","title":"Metabolite Enrichment Analysis","text":"Calculate activity enrichment score p-value pathways using conditions matrix (patient samples vs metabolite expression) calculating mean expression metabolites.","code":""},{"path":"/articles/metabolic_pathway_enrichment.html","id":"prepare-input-data","dir":"Articles","previous_headings":"","what":"Prepare input data","title":"Metabolite Enrichment Analysis","text":"","code":"network <- metabolites_pathway_df    #input 1: pathways and their associated metabolites network$mor <- 1                     #add new column for mode of regulation # network$likelihood <- 1              #add new column for edge likelihood  t_table_kegg <- t_table t_table_kegg$KEGG <- get_pure_kegg_ids(t_table_kegg$KEGG) #remove compartment info t_table_kegg <- unique(t_table_kegg) row.names(t_table_kegg) <- t_table_kegg$KEGG  #convert kegg column to row names t_table_kegg$KEGG <- NULL            #delete kegg ids column t_table_kegg <- unique(t_table_kegg) #ensure only 1 kegg is mapped to 1 metabolite mat <- as.matrix(t_table_kegg)       #input 2: expression matrix"},{"path":"/articles/metabolic_pathway_enrichment.html","id":"perform-enrichment-analysis","dir":"Articles","previous_headings":"","what":"Perform enrichment analysis","title":"Metabolite Enrichment Analysis","text":"","code":"enrichment <- run_wmean(mat, network,                           .source = .data$pathway,                           .target = .data$metabolites,                           .mor = .data$mor,                            # .likelihood = .data$likelihood,                          times = 1000, minsize = 5)  #randomize matrix  enrichment$condition <- NULL enrichment <- as.data.frame(enrichment) colnames(enrichment) <- c(\"statistic\", \"pathway\", \"score\", \"p-value\")"},{"path":"/articles/metabolic_pathway_enrichment.html","id":"keep-only-rows-with-statistic-normalized_mean","dir":"Articles","previous_headings":"","what":"Keep only rows with statistic “normalized_mean”","title":"Metabolite Enrichment Analysis","text":"","code":"enrichment_norm <- enrichment[enrichment$statistic == \"norm_wmean\", ]"},{"path":"/articles/metabolic_pathway_enrichment.html","id":"visualize-most-significant-pathways-in-a-bar-plot","dir":"Articles","previous_headings":"","what":"Visualize most significant pathways in a bar plot","title":"Metabolite Enrichment Analysis","text":"","code":"score <- 1.0  #define cutoff score barplot = plot_significant_pathways(enrichment_norm, score) barplot  #ggsave(\"enriched_pathways.png\", plot = barplot, #       path = \"results/\", scale = 1, dpi = 300, limitsize = TRUE) sessionInfo() ## R version 4.4.2 (2024-10-31) ## Platform: x86_64-pc-linux-gnu ## Running under: Ubuntu 22.04.5 LTS ##  ## Matrix products: default ## BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  ## LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 ##  ## locale: ##  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        ##  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    ##  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           ## [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    ##  ## time zone: UTC ## tzcode source: system (glibc) ##  ## attached base packages: ## [1] stats     graphics  grDevices utils     datasets  methods   base      ##  ## loaded via a namespace (and not attached): ##  [1] digest_0.6.37     desc_1.4.3        R6_2.5.1          fastmap_1.2.0     ##  [5] xfun_0.49         cachem_1.1.0      knitr_1.48        htmltools_0.5.8.1 ##  [9] rmarkdown_2.29    lifecycle_1.0.4   cli_3.6.3         sass_0.4.9        ## [13] pkgdown_2.1.1     textshaping_0.4.0 jquerylib_0.1.4   systemfonts_1.1.0 ## [17] compiler_4.4.2    tools_4.4.2       ragg_1.3.3        evaluate_1.0.1    ## [21] bslib_0.8.0       yaml_2.3.10       jsonlite_1.8.9    rlang_1.1.4       ## [25] fs_1.6.5          htmlwidgets_1.6.4"},{"path":"/articles/ocean_intro.html","id":"install-ocean","dir":"Articles","previous_headings":"","what":"Install ocEAn","title":"ocEAn Intro","text":"","code":"library(devtools) install_github(\"saezlab/ocean\")"},{"path":"/articles/ocean_intro.html","id":"tutorial-with-a-kidney-cancer-toy-metabolomic-dataset","dir":"Articles","previous_headings":"","what":"Tutorial with a kidney cancer toy metabolomic dataset","title":"ocEAn Intro","text":"","code":"library(ocean)"},{"path":"/articles/ocean_intro.html","id":"differential-analysis","dir":"Articles","previous_headings":"","what":"Differential analysis","title":"ocEAn Intro","text":"data : https://www.embopress.org/doi/full/10.15252/msb.20209730. differential anaylsis result represents metabolic -regulations metabolite abundances kidney tumor tissue compared adjacent non-tumoral tissue.","code":"unique(toy_targets$condition) comparisons <- list('tumorVsHealthy' = c(1,-2))  limmaRes <- runLimma(measurements = toy_metabolomic_data,                      targets = toy_targets,                      comparisons = comparisons)"},{"path":"/articles/ocean_intro.html","id":"format-differential-analysis-result","dir":"Articles","previous_headings":"","what":"Format differential analysis result","title":"ocEAn Intro","text":"order assess metabolic imbalance, use t statistic differential analysis. t-statistic represents good estimate relative significance -regulations metabolic abundances.","code":"t_table <- ttop_list_to_t_table(   limma_res_to_ttop_list(limma_res = limmaRes,                          comp_names = names(comparisons),                          number = length(toy_metabolomic_data[,1]),                          adjust.method = \"fdr\"))"},{"path":"/articles/ocean_intro.html","id":"next-the-metabolic-names-have-to-be-converted-to-a-standard-identifer-","dir":"Articles","previous_headings":"","what":"Next, the metabolic names have to be converted to a standard identifer.","title":"ocEAn Intro","text":"case, use KEGG IDs. step particularly important users metabolic identifiers mapped kegg ids used method. USER PROVIDE MAPPING TABLE FORMAT ONE PRESENTED . (can look inspire .) mapping table map users metabolic identifiers kegg compound IDs.","code":"t_table <- t_table_metactivity_input_formater(   metabolomic_t_table = t_table,   mapping_table = mapping_table,   affixes = c(\"c\",\"l\",\"x\",\"m\",\"e\",\"n\",\"r\") )"},{"path":"/articles/ocean_intro.html","id":"these-are-the-available-pathways-to-choose-from","dir":"Articles","previous_headings":"","what":"These are the available pathways to choose from","title":"ocEAn Intro","text":"","code":"View(unique(recon2_redhuman$pathway))"},{"path":"/articles/ocean_intro.html","id":"subnetworks","dir":"Articles","previous_headings":"","what":"Subnetworks","title":"ocEAn Intro","text":"case, use pathways available. Users can restrict list per-need basis. formating network required, especially make method easier run results easier interpret. step simply translate gene IDs enzyme complexes gene symbols: Co-factors removed. since aiming follow metabolic routes metabolic reaction network, crucial remove -promiscuous metabolites create unnecessary complexity network. Filter gene isn’t expressed metabolic network: Compress transporters simplify network: Split transaminases preserve correct metabolic transformation routes: Convert network forest (list enzymes (trees) correspoding metabolic signatures (branches)):","code":"data(expressed_genes) all_pathways <- unique(recon2_redhuman$pathway) sub_network <- model_to_pathway_sif(pathway_to_keep = all_pathways$X1) sub_network <- translate_complexes(sub_network) sub_network_nocofact <- remove_cofactors(sub_network) non_expressed_genes <- expressed_genes[rowSums(expressed_genes[,c(2),drop = F]) == 0,c(1),drop = F] non_expressed_genes <- c(non_expressed_genes$gene)  tokeep <- list() for(i in 1:length(sub_network_nocofact$reaction_network[,1])) {   elements <- gsub(\"[><].*\",\"\",sub_network_nocofact$reaction_network[i,])   elements <- elements[!grepl(\"cpd:\",elements)]   elements <- unlist(strsplit(elements, \"_\"))   tokeep[[i]] <- sum(elements %in% non_expressed_genes) == 0 } tokeep <- unlist(tokeep) sub_network_nocofact$reaction_network <- sub_network_nocofact$reaction_network[tokeep,] sub_network_nocofact <- compress_transporters(sub_network_nocofact = sub_network_nocofact) sub_network_nocofact <- split_transaminases(sub_network_nocofact = sub_network_nocofact)  enzymes <- unique(sub_network_nocofact$attributes$V1) enzymes <- enzymes[!grepl(\"_[clxmenr]$\",enzymes)] sub_forest <- forestMaker(enzymes, sub_network_nocofact$reaction_network, branch_length = c(1,1), remove_reverse = T)"},{"path":"/articles/ocean_intro.html","id":"prepare-the-metabolic-enzyme-sets","dir":"Articles","previous_headings":"","what":"Prepare the metabolic enzyme sets","title":"ocEAn Intro","text":"","code":"penalty_min <- 6 #minimum 1 and integer penalty_max <- 8 #maximum 9 and integer  reaction_set_list <- prepare_metabolite_set(   penalty_range = penalty_min:penalty_max,   forest = sub_forest,   measured_metabolites = t_table$KEGG )  reaction_set_list_merged <- condense_metabolite_set(reaction_set_list = reaction_set_list)  penalty <- 8 #has be between penalty_min and penalty_max and integer  regulons_df <- prepare_regulon_df(   reaction_set_list_merged,   penalty,   filter_imbalance = c(0,1) )"},{"path":"/articles/ocean_intro.html","id":"compute-metabolic-enzme-enrichment-score","dir":"Articles","previous_headings":"","what":"Compute metabolic enzme enrichment score","title":"ocEAn Intro","text":"","code":"metactivity_res <- metactivity(metabolomic_t_table = t_table,                                regulons_df = regulons_df,                                compartment_pattern = \"_[a-z]$\",                                k = 1000)  mean_ES_df <- metactivity_res$ES  mean_NES_df <- metactivity_res$NES translated_results <- translate_results(regulons_df = regulons_df, t_table = t_table, mapping_table = mapping_table, compress_compartments = T)"},{"path":"/articles/ocean_intro.html","id":"visualise-results-for-single-enzymes","dir":"Articles","previous_headings":"","what":"Visualise results for single enzymes","title":"ocEAn Intro","text":"","code":"plots <- plotMetaboliteContribution(   enzyme = 'OGDH_DLD_PDH_DLST>1052',   stat_df = translated_results$t_table,   metabolite_sets = translated_results$regulons_df,   contrast_index = 1,   stat_name = 'Abundance Down <==> Up (t-value)',   scaling_factor = 6,   nLabels =  25 )  plot(plots$scatter)  plots <- plotMetaboliteContribution(   enzyme = 'BCAT1',   stat_df = translated_results$t_table,   metabolite_sets = translated_results$regulons_df,   contrast_index = 1,   stat_name = 'Abundance Down <==> Up (t-value)',   scaling_factor = 6,   nLabels =  25 )  plot(plots$scatter) sessionInfo() ## R version 4.4.2 (2024-10-31) ## Platform: x86_64-pc-linux-gnu ## Running under: Ubuntu 22.04.5 LTS ##  ## Matrix products: default ## BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  ## LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 ##  ## locale: ##  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        ##  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    ##  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           ## [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    ##  ## time zone: UTC ## tzcode source: system (glibc) ##  ## attached base packages: ## [1] stats     graphics  grDevices utils     datasets  methods   base      ##  ## loaded via a namespace (and not attached): ##  [1] digest_0.6.37     desc_1.4.3        R6_2.5.1          fastmap_1.2.0     ##  [5] xfun_0.49         cachem_1.1.0      knitr_1.48        htmltools_0.5.8.1 ##  [9] rmarkdown_2.29    lifecycle_1.0.4   cli_3.6.3         sass_0.4.9        ## [13] pkgdown_2.1.1     textshaping_0.4.0 jquerylib_0.1.4   systemfonts_1.1.0 ## [17] compiler_4.4.2    tools_4.4.2       ragg_1.3.3        evaluate_1.0.1    ## [21] bslib_0.8.0       yaml_2.3.10       jsonlite_1.8.9    rlang_1.1.4       ## [25] fs_1.6.5          htmlwidgets_1.6.4"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Aurélien Dugourd. Maintainer, author.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"M Sciacovelli, Dugourd, LV Jimenez, M Yang,         E Nikitopoulou, ASH Costa, L Tronci, V Caraffini, P Rodrigues,         C Schmidt, DG Ryan, T Young, VR Zecchini, SH Rossi, C Massie,         C Lohoff, M Masid, V Hatzimanikatis, C Kuppe, Von Kriegsheim,         R Kramann, V Gnanapragasam, AY Warren, GD Stewart, Erez,         S Vanharanta, J Saez-Rodriguez, C Frezza (2022) Dynamic partitioning         branched-chain amino acids-derived nitrogen supports renal cancer         progression. Nature communications 13(1):7830;         DOI: 10.1038/s41467-022-35036-4","code":"@Article{,   author = {Sciacovelli Marco and Dugourd Aurelien and Jimenez {Lorea Valcarcel} and Yang Ming and Nikitopoulou Efterpi and Costa {Ana S H} and Tronci Laura and Caraffini Veronica and Rodrigues Paulo and Schmidt Christina and Ryan {Dylan Gerard} and Young Timothy and Zecchini {Vincent R} and Rossi {Sabrina H} and Massie Charlie and Lohoff Caroline and Masid Maria and Hatzimanikatis Vassily and Kuppe Christoph and Von Kriegsheim Alex and Kramann Rafael and Gnanapragasam Vincent and Warren {Anne Y} and Stewart {Grant D} and Erez Ayelet and Vanharanta Sakari and Saez-Rodriguez Julio and Frezza Christian},   title = {Dynamic partitioning of branched-chain amino acids-derived nitrogen supports renal cancer progression},   journal = {Nature communications},   year = {2022},   doi = {10.1038/s41467-022-35036-4}, }"},{"path":[]},{"path":"/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"metabolic enzyme enrichment analysis","text":"functional insights metabolomic data sets contain currently lies -exploited. part due complexity metabolic reaction networks indirect relationship reaction fluxes metabolite abundance. Yet, footprint-based methods available decades context omic data sets transcriptomic phosphoproteomic. , present ocEAn, method defines metabolic enzyme footprint curated reduced version recon2 reaction network use explore coordinated deregulations metabolite abundances respect position relative metabolic enzymes manner Kinase-substrate TF-targets Enrichment analysis. picture diplays TCA cycle deregulated metabolites estimated metabolic enzyme deregulations kidney cancer. can generate dynamic visualisation network pathways following tutorial.","code":""},{"path":"/index.html","id":"tutorial","dir":"","previous_headings":"","what":"Tutorial","title":"metabolic enzyme enrichment analysis","text":"Instal package (github remotes) : can run tutorial scripts kidney cancer toy metabolomic dataset. can find lightweight tutorial R script PLEASE READ TUTORIAL CAREFULLY :) hesitate extensive look variable information contain. new updated tutorial showcase ocean results can used parallel proteomic data comming soon!","code":"## If needed install the remotes and BiocManager packages install.packages(\"remotes\") install.packages(\"BiocManager\")  ## instal ocean remotes::install_github(\"saezlab/ocean\", repos = BiocManager::repositories())"},{"path":"/index.html","id":"citations","dir":"","previous_headings":"","what":"Citations","title":"metabolic enzyme enrichment analysis","text":"ocEAn manuscript: Sciacovelli, Dugourd et al. Nitrogen partitioning branched-chain amino acids urea cycle enzymes sustains renal cancer progression; 2022 https://pubmed.ncbi.nlm.nih.gov/36539415/ reproduce result manuscript, install ocEAn branch “marco_paper”. underlying metabolic model based curated reduced model human metabolism, see: Masid M, Ataman M & Hatzimanikatis V (2020) Analysis human metabolism reducing complexity genome-scale models using redHUMAN. Nat Commun 11: 2821 https://www.nature.com/articles/s41467-020-16549-2#Tab1 scripts process redHuman model oCEan format can found : https://github.com/saezlab/redHuman_models","code":""},{"path":"/reference/buildTree.html","id":null,"dir":"Reference","previous_headings":"","what":"buildtree — buildTree","title":"buildtree — buildTree","text":"buildtree","code":""},{"path":"/reference/buildTree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"buildtree — buildTree","text":"","code":"buildTree(root, graph, remove_reverse = F)"},{"path":"/reference/buildTree.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"buildtree — buildTree","text":"root ipsum... graph ipsum...","code":""},{"path":"/reference/buildTree.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"buildtree — buildTree","text":"ipsum...","code":""},{"path":"/reference/checkInputs.html","id":null,"dir":"Reference","previous_headings":"","what":"checkInputs — checkInputs","title":"checkInputs — checkInputs","text":"ipsum...","code":""},{"path":"/reference/checkInputs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"checkInputs — checkInputs","text":"","code":"checkInputs(measurments, targets)"},{"path":"/reference/checkInputs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"checkInputs — checkInputs","text":"measurments ipsum... targets ipsum...","code":""},{"path":"/reference/checkInputs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"checkInputs — checkInputs","text":"ipsum...","code":""},{"path":"/reference/compress_transporters.html","id":null,"dir":"Reference","previous_headings":"","what":"compress_transporters — compress_transporters","title":"compress_transporters — compress_transporters","text":"function removes cofactors reaction networks generate model_to_pathway_sif function","code":""},{"path":"/reference/compress_transporters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"compress_transporters — compress_transporters","text":"","code":"compress_transporters(sub_network_nocofact)"},{"path":"/reference/compress_transporters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"compress_transporters — compress_transporters","text":"sub_network_nocofact ipsum...","code":""},{"path":"/reference/compress_transporters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"compress_transporters — compress_transporters","text":"ipsum...","code":""},{"path":"/reference/condense_metabolite_set.html","id":null,"dir":"Reference","previous_headings":"","what":"condense_metabolite_set — condense_metabolite_set","title":"condense_metabolite_set — condense_metabolite_set","text":"function condense metabolic-enzyme set collections summarise ignore specific types information compartments relative positions (sign)","code":""},{"path":"/reference/condense_metabolite_set.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"condense_metabolite_set — condense_metabolite_set","text":"","code":"condense_metabolite_set(   reaction_set_list,   condense_sign = T,   condense_compartments = F,   ignore_sign = F )"},{"path":"/reference/condense_metabolite_set.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"condense_metabolite_set — condense_metabolite_set","text":"reaction_set_list list, metabolic-enzyme set collections returned prepare_metabolite_set function condense_sign boolean, summarise upstream downstream position metabolites signle relative position condense_compartments boolean, wether compartment information hte metabolic network sohuld ignored ignore_sign boolean, wether upstream/downstream position metabolic ignored","code":""},{"path":"/reference/condense_metabolite_set.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"condense_metabolite_set — condense_metabolite_set","text":"metabolic-enzyme set collections","code":""},{"path":"/reference/expressed_genes.html","id":null,"dir":"Reference","previous_headings":"","what":"expressed_genes — expressed_genes","title":"expressed_genes — expressed_genes","text":"expressed_genes","code":""},{"path":"/reference/expressed_genes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"expressed_genes — expressed_genes","text":"","code":"data(expressed_genes)"},{"path":"/reference/expressed_genes.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"expressed_genes — expressed_genes","text":"object class data.frame 28394 rows 2 columns.","code":""},{"path":"/reference/expressed_genes.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"expressed_genes — expressed_genes","text":"https://pubmed.ncbi.nlm.nih.gov/36539415/","code":""},{"path":"/reference/expressed_genes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"expressed_genes — expressed_genes","text":"","code":"data(expressed_genes)"},{"path":"/reference/forestMaker.html","id":null,"dir":"Reference","previous_headings":"","what":"forestMaker — forestMaker","title":"forestMaker — forestMaker","text":"forestMaker","code":""},{"path":"/reference/forestMaker.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"forestMaker — forestMaker","text":"","code":"forestMaker(   molecule_names,   reaction_network,   branch_length = c(1, 1),   remove_reverse = F )"},{"path":"/reference/forestMaker.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"forestMaker — forestMaker","text":"molecule_names ipsum... reaction_network ipsum...","code":""},{"path":"/reference/forestMaker.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"forestMaker — forestMaker","text":"ipsum...","code":""},{"path":"/reference/generate_sifAtt.html","id":null,"dir":"Reference","previous_headings":"","what":"generate_sifAtt — generate_sifAtt","title":"generate_sifAtt — generate_sifAtt","text":"generate_sifAtt","code":""},{"path":"/reference/generate_sifAtt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"generate_sifAtt — generate_sifAtt","text":"","code":"generate_sifAtt(   network_and_attributes,   t_table,   scores_df,   column_index,   rbrewer_plalette_name = \"RdBu\" )"},{"path":"/reference/generate_sifAtt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"generate_sifAtt — generate_sifAtt","text":"network_and_attributes lorem ipsum... t_table lorem ipsum... scores_df lorem ipsum... column_index lorem ipsum... rbrewer_plalette_name lorem ipsum...","code":""},{"path":"/reference/generate_sifAtt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"generate_sifAtt — generate_sifAtt","text":"lorem ipsum...","code":""},{"path":"/reference/get_pure_kegg_ids.html","id":null,"dir":"Reference","previous_headings":"","what":"get_pure_kegg_ids — get_pure_kegg_ids","title":"get_pure_kegg_ids — get_pure_kegg_ids","text":"Function remove compartment information \"cpd:\" column metabolites identifiers order get pure KEGG ids","code":""},{"path":"/reference/get_pure_kegg_ids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get_pure_kegg_ids — get_pure_kegg_ids","text":"","code":"get_pure_kegg_ids(metabolites_col)"},{"path":"/reference/get_pure_kegg_ids.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get_pure_kegg_ids — get_pure_kegg_ids","text":"metabolites_col column data frame containing metabolite ids","code":""},{"path":"/reference/get_pure_kegg_ids.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get_pure_kegg_ids — get_pure_kegg_ids","text":"column data frame containing KEGG ids","code":""},{"path":"/reference/hello.html","id":null,"dir":"Reference","previous_headings":"","what":"Hello, World! — hello","title":"Hello, World! — hello","text":"Prints 'Hello, world!'.","code":""},{"path":"/reference/hello.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hello, World! — hello","text":"","code":"hello()"},{"path":"/reference/hello.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Hello, World! — hello","text":"","code":"hello() #> Error in hello(): could not find function \"hello\""},{"path":"/reference/limma_res_to_ttop_list.html","id":null,"dir":"Reference","previous_headings":"","what":"limma_res_to_ttop_list — limma_res_to_ttop_list","title":"limma_res_to_ttop_list — limma_res_to_ttop_list","text":"function converts output runLimma function list limma top tables","code":""},{"path":"/reference/limma_res_to_ttop_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"limma_res_to_ttop_list — limma_res_to_ttop_list","text":"","code":"limma_res_to_ttop_list(limma_res, comp_names, number, adjust.method = \"fdr\")"},{"path":"/reference/limma_res_to_ttop_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"limma_res_to_ttop_list — limma_res_to_ttop_list","text":"limma_res output runLimma function comp_names identifiers contrasts considered runLimma function number number top features included top table results adjust.method method adjust p-values, topTable limma function","code":""},{"path":"/reference/limma_res_to_ttop_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"limma_res_to_ttop_list — limma_res_to_ttop_list","text":"list limma top table results","code":""},{"path":"/reference/makeContrastsAlt.html","id":null,"dir":"Reference","previous_headings":"","what":"makeContrastsAlt — makeContrastsAlt","title":"makeContrastsAlt — makeContrastsAlt","text":"function create contrast matrix used limma.","code":""},{"path":"/reference/makeContrastsAlt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"makeContrastsAlt — makeContrastsAlt","text":"","code":"makeContrastsAlt(targets, comparisons)"},{"path":"/reference/makeContrastsAlt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"makeContrastsAlt — makeContrastsAlt","text":"targets n*2 dataframe, n number samples. First column correspond samples, second column correspond conditions. comparisons list numeric vectors. vector represent condition conpared. Example : c(2,-1) means first condition substracted second condition. Vectors can two element complex contrasts.","code":""},{"path":"/reference/makeContrastsAlt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"makeContrastsAlt — makeContrastsAlt","text":"contrast matrix","code":""},{"path":"/reference/make_df_and_targets_great_again.html","id":null,"dir":"Reference","previous_headings":"","what":"make_df_and_targets_great_again — make_df_and_targets_great_again","title":"make_df_and_targets_great_again — make_df_and_targets_great_again","text":"function Check wether sample names coherent measurment dataframe target dataframe. coherent, target dataframe rows reordered match column order measurment dataframe.","code":""},{"path":"/reference/make_df_and_targets_great_again.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"make_df_and_targets_great_again — make_df_and_targets_great_again","text":"","code":"make_df_and_targets_great_again(df, targets)"},{"path":"/reference/make_df_and_targets_great_again.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"make_df_and_targets_great_again — make_df_and_targets_great_again","text":"df measurment n*m dataframe (n number omic features, m number samples) columns ordered conditions. targets n*2 dataframe, n number samples. First column correspond samples, second column correspond conditions.","code":""},{"path":"/reference/make_df_and_targets_great_again.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"make_df_and_targets_great_again — make_df_and_targets_great_again","text":"list, first element cleaned measurment dataframe second element cleaned target dataframe.","code":""},{"path":"/reference/make_discrete_palette.html","id":null,"dir":"Reference","previous_headings":"","what":"make_discrete_palette — make_discrete_palette","title":"make_discrete_palette — make_discrete_palette","text":"make_discrete_palette","code":""},{"path":"/reference/make_discrete_palette.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"make_discrete_palette — make_discrete_palette","text":"","code":"make_discrete_palette(numeric_vector, rbrewer_plalette_name)"},{"path":"/reference/make_discrete_palette.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"make_discrete_palette — make_discrete_palette","text":"numeric_vector metabolic-enzyme set collections, returned condense_metabolite_set function rbrewer_plalette_name numeric, index reaction_set_list_merged corresponding desired penalty","code":""},{"path":"/reference/make_discrete_palette.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"make_discrete_palette — make_discrete_palette","text":"ipsum lorem...","code":""},{"path":"/reference/map_pathways_to_metabolites.html","id":null,"dir":"Reference","previous_headings":"","what":"map_pathways_to_metabolites — map_pathways_to_metabolites","title":"map_pathways_to_metabolites — map_pathways_to_metabolites","text":"Function map pathways enzymes subsequently metabolites.","code":""},{"path":"/reference/map_pathways_to_metabolites.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"map_pathways_to_metabolites — map_pathways_to_metabolites","text":"","code":"map_pathways_to_metabolites(metab_df, pathways = redHuman_pathways)"},{"path":"/reference/map_pathways_to_metabolites.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"map_pathways_to_metabolites — map_pathways_to_metabolites","text":"metab_df data frame metabolites target/source enzymes pathways pathway collection used create metabolite/pathway table. default pathway ontology redHuman used.","code":""},{"path":"/reference/map_pathways_to_metabolites.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"map_pathways_to_metabolites — map_pathways_to_metabolites","text":"data frame containing metabolites pathways","code":""},{"path":"/reference/mapping_table.html","id":null,"dir":"Reference","previous_headings":"","what":"mapping_table — mapping_table","title":"mapping_table — mapping_table","text":"mapping_table","code":""},{"path":"/reference/mapping_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"mapping_table — mapping_table","text":"","code":"data(mapping_table)"},{"path":"/reference/mapping_table.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"mapping_table — mapping_table","text":"object class data.frame 2594 rows 2 columns.","code":""},{"path":"/reference/mapping_table.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"mapping_table — mapping_table","text":"https://pubmed.ncbi.nlm.nih.gov/36539415/","code":""},{"path":"/reference/mapping_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"mapping_table — mapping_table","text":"","code":"data(mapping_table)"},{"path":"/reference/metactivity.html","id":null,"dir":"Reference","previous_headings":"","what":"metactivity — metactivity","title":"metactivity — metactivity","text":"Use mean enrichement statistic shuffling-based normalisation (preserving metabolic compartment information) compute metabolic enzme normalised enrichment score, based upstream downstream metabolites","code":""},{"path":"/reference/metactivity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"metactivity — metactivity","text":"","code":"metactivity(   metabolomic_t_table,   regulons_df,   compartment_pattern = \"\",   k = 1000,   seed = 1337 )"},{"path":"/reference/metactivity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"metactivity — metactivity","text":"metabolomic_t_table ipsum... regulons_df ipsum... compartment_pattern ipsum... k ipsum...","code":""},{"path":"/reference/metactivity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"metactivity — metactivity","text":"ipsum...","code":""},{"path":"/reference/model_to_pathway_sif.html","id":null,"dir":"Reference","previous_headings":"","what":"model_to_pathway_sif — model_to_pathway_sif","title":"model_to_pathway_sif — model_to_pathway_sif","text":"function generate subreaction network sif format recon_redhuman model given set pathways","code":""},{"path":"/reference/model_to_pathway_sif.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"model_to_pathway_sif — model_to_pathway_sif","text":"","code":"model_to_pathway_sif(   pathway_to_keep,   pathways = recon2_redhuman$pathway,   rxns = recon2_redhuman$rxns,   rules = recon2_redhuman$rules,   minmax = recon2_redhuman$minmax,   stochio = recon2_redhuman$stochio,   metab = recon2_redhuman$metab,   mapping = recon2_redhuman$gene_mapping,   recon1_metabolites = recon2_redhuman$metab_mapping )"},{"path":"/reference/model_to_pathway_sif.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"model_to_pathway_sif — model_to_pathway_sif","text":"pathway_to_keep character vector ID pathways used build SIF reaction network. Use \"View(unique(recon2_redhuman$pathway))\" see available pathway IDs pathways pathway corresponding redhuman reaction indexes rxns reaction IDs corresponding redhuman reaction indexes rules gene rules corresponding redhuman reaction indexes minmax min max flux boundaries corresponding redhuman reaction indexes stochio redhuman stochiometric matrix metab metabolite IDs corresponding redhuman metabolite indexes mapping obsolete recon1_metabolites obsolete","code":""},{"path":"/reference/model_to_pathway_sif.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"model_to_pathway_sif — model_to_pathway_sif","text":"subreaction network sif format","code":""},{"path":"/reference/nicePCA.html","id":null,"dir":"Reference","previous_headings":"","what":"nicePCA — nicePCA","title":"nicePCA — nicePCA","text":"function generate 3*3 arrangeGrob plot object (can subsequently diplayed saved). cell 3*3 plot grid correspond specific representation result principal component analysis performed measurment dataframe. first input n*m data.frame, n number measured omic features (genes, proteins, metabolites...) m number samples. second input basic n*2 target dataframe (generated generateTarget function), n number samples.","code":""},{"path":"/reference/nicePCA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"nicePCA — nicePCA","text":"","code":"nicePCA(   df,   targets,   components = c(1, 2, 3),   centering = T,   scaling = F,   pointSize = 4,   no_label = FALSE )"},{"path":"/reference/nicePCA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"nicePCA — nicePCA","text":"df measurment n*m dataframe (n number omic features, m number samples) columns ordered conditions. targets n*2 dataframe, n number samples. First column correspond samples, second column correspond conditions. components vector three integers, corresponding components plotted centering boolean parameter indicate wether samples mean centered scaling boolean parameter indicate wether samples scaled (x/variance) pointSize integer parameter indicate desired point size components scatter plots.","code":""},{"path":"/reference/nicePCA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"nicePCA — nicePCA","text":"3*3 arrangeGrob object containing various graphical representation result PCA.","code":""},{"path":"/reference/nitrogen_tracking.html","id":null,"dir":"Reference","previous_headings":"","what":"nitrogen_tracking — nitrogen_tracking","title":"nitrogen_tracking — nitrogen_tracking","text":"function cross link transamination metabolites track amine groups","code":""},{"path":"/reference/nitrogen_tracking.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"nitrogen_tracking — nitrogen_tracking","text":"","code":"nitrogen_tracking(sub_network_nocofact)"},{"path":"/reference/nitrogen_tracking.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"nitrogen_tracking — nitrogen_tracking","text":"sub_network_nocofact ipsum...","code":""},{"path":"/reference/nitrogen_tracking.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"nitrogen_tracking — nitrogen_tracking","text":"ipsum...","code":""},{"path":"/reference/pathway_HM.html","id":null,"dir":"Reference","previous_headings":"","what":"pathway_HM — pathway_HM","title":"pathway_HM — pathway_HM","text":"ipsum...","code":""},{"path":"/reference/pathway_HM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"pathway_HM — pathway_HM","text":"","code":"pathway_HM(   mean_NES_df,   pathway_name,   pathways,   sort_by = 1,   manual_pathway = F )"},{"path":"/reference/pathway_HM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"pathway_HM — pathway_HM","text":"mean_NES_df ipsum... pathway_name ipsum... pathways ipsum... sort_by ipsum... manual_pathway ipsum...","code":""},{"path":"/reference/pathway_HM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"pathway_HM — pathway_HM","text":"ipsum...","code":""},{"path":"/reference/plotMetaboliteContribution.html","id":null,"dir":"Reference","previous_headings":"","what":"plotMetaboliteContribution — plotMetaboliteContribution","title":"plotMetaboliteContribution — plotMetaboliteContribution","text":"ipsum...","code":""},{"path":"/reference/plotMetaboliteContribution.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plotMetaboliteContribution — plotMetaboliteContribution","text":"","code":"plotMetaboliteContribution(   enzyme,   stat_df,   metabolite_sets,   contrast_index,   stat_name = \"stat\",   scaling_factor = 1,   nLabels = 10 )"},{"path":"/reference/plotMetaboliteContribution.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plotMetaboliteContribution — plotMetaboliteContribution","text":"enzyme ipsum... stat_df ipsum... metabolite_sets ipsum... contrast_index ipsum... stat_name ipsum... scaling_factor ipsum... nLabels ipsum...","code":""},{"path":"/reference/plotMetaboliteContribution.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"plotMetaboliteContribution — plotMetaboliteContribution","text":"ipsum...","code":""},{"path":"/reference/plot_reaction_network.html","id":null,"dir":"Reference","previous_headings":"","what":"plot_reaction_network — plot_reaction_network","title":"plot_reaction_network — plot_reaction_network","text":"plot_reaction_network","code":""},{"path":"/reference/plot_reaction_network.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot_reaction_network — plot_reaction_network","text":"","code":"plot_reaction_network(   network_and_attributes,   t_table,   scores_df,   column_index,   rbrewer_plalette_name = \"RdBu\",   vis.height = 700,   vis.degree = 2 )"},{"path":"/reference/plot_reaction_network.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot_reaction_network — plot_reaction_network","text":"network_and_attributes lorem ipsum... t_table lorem ipsum... scores_df lorem ipsum... column_index lorem ipsum... rbrewer_plalette_name lorem ipsum...","code":""},{"path":"/reference/plot_reaction_network.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"plot_reaction_network — plot_reaction_network","text":"lorem ipsum...","code":""},{"path":"/reference/plot_significant_pathways.html","id":null,"dir":"Reference","previous_headings":"","what":"plot_significant_pathways — plot_significant_pathways","title":"plot_significant_pathways — plot_significant_pathways","text":"Function plot interesting pathways metabolite enrichment analysis","code":""},{"path":"/reference/plot_significant_pathways.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot_significant_pathways — plot_significant_pathways","text":"","code":"plot_significant_pathways(enrichmentDF, score)"},{"path":"/reference/plot_significant_pathways.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot_significant_pathways — plot_significant_pathways","text":"enrichmentDF Data frame containing significant pathways","code":""},{"path":"/reference/plot_significant_pathways.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"plot_significant_pathways — plot_significant_pathways","text":"Bar plot significant pathways enrichment score","code":""},{"path":"/reference/prepare_metabolite_set.html","id":null,"dir":"Reference","previous_headings":"","what":"prepare_metabolite_set — prepare_metabolite_set","title":"prepare_metabolite_set — prepare_metabolite_set","text":"functions create series metabolic-enzyme set collections range penalties (see tutorial)","code":""},{"path":"/reference/prepare_metabolite_set.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"prepare_metabolite_set — prepare_metabolite_set","text":"","code":"prepare_metabolite_set(penalty_range, forest, measured_metabolites)"},{"path":"/reference/prepare_metabolite_set.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"prepare_metabolite_set — prepare_metabolite_set","text":"penalty_range numeric vector, minimum 1 maximum 9 forest list, forest representation metabolic network. measured_metabolites character vector, names measured metabolites","code":""},{"path":"/reference/prepare_metabolite_set.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"prepare_metabolite_set — prepare_metabolite_set","text":"series metabolic-enzyme set collections","code":""},{"path":"/reference/prepare_regulon_df.html","id":null,"dir":"Reference","previous_headings":"","what":"prepare_regulon_df — prepare_regulon_df","title":"prepare_regulon_df — prepare_regulon_df","text":"extract cleanup regulon collection correpsonding desired penalty","code":""},{"path":"/reference/prepare_regulon_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"prepare_regulon_df — prepare_regulon_df","text":"","code":"prepare_regulon_df(   reaction_set_list_merged,   penalty,   filter_imbalance = c(0, 1) )"},{"path":"/reference/prepare_regulon_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"prepare_regulon_df — prepare_regulon_df","text":"reaction_set_list_merged metabolic-enzyme set collections, returned condense_metabolite_set function penalty numeric, index reaction_set_list_merged corresponding desired penalty filter_imbalance vector two numbers, representing lower upper bounds filter imbalanced reaction trees. example c(0.33,0.67) filter reaction upstream branch longer 2 time length downstream branch, vice versa","code":""},{"path":"/reference/prepare_regulon_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"prepare_regulon_df — prepare_regulon_df","text":"regulon dataframe three columns correposning enzme, target metabolite weight","code":""},{"path":"/reference/rearrange_dataframe.html","id":null,"dir":"Reference","previous_headings":"","what":"rearrange_dataframe — rearrange_dataframe","title":"rearrange_dataframe — rearrange_dataframe","text":"Function rearrange data frame obtain enzyme/metabolite df instead source/target df, .e. enzymes one column metabolites second column.","code":""},{"path":"/reference/rearrange_dataframe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"rearrange_dataframe — rearrange_dataframe","text":"","code":"rearrange_dataframe(network)"},{"path":"/reference/rearrange_dataframe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"rearrange_dataframe — rearrange_dataframe","text":"network source/target network containing enzymes metabolites","code":""},{"path":"/reference/rearrange_dataframe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"rearrange_dataframe — rearrange_dataframe","text":"data frame metabolites source/target enzymes","code":""},{"path":"/reference/recon2_redhuman.html","id":null,"dir":"Reference","previous_headings":"","what":"recon2_redhuman — recon2_redhuman","title":"recon2_redhuman — recon2_redhuman","text":"recon2_redhuman","code":""},{"path":"/reference/recon2_redhuman.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"recon2_redhuman — recon2_redhuman","text":"","code":"data(recon2_redhuman)"},{"path":"/reference/recon2_redhuman.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"recon2_redhuman — recon2_redhuman","text":"object class list length 8.","code":""},{"path":"/reference/recon2_redhuman.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"recon2_redhuman — recon2_redhuman","text":"https://pubmed.ncbi.nlm.nih.gov/36539415/","code":""},{"path":"/reference/recon2_redhuman.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"recon2_redhuman — recon2_redhuman","text":"","code":"data(recon2_redhuman)"},{"path":"/reference/remove_cofactors.html","id":null,"dir":"Reference","previous_headings":"","what":"remove_cofactors — remove_cofactors","title":"remove_cofactors — remove_cofactors","text":"function removes cofactors reaction networks generate model_to_pathway_sif function","code":""},{"path":"/reference/remove_cofactors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"remove_cofactors — remove_cofactors","text":"","code":"remove_cofactors(reaction_network, compound_list = kegg_compounds)"},{"path":"/reference/remove_cofactors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"remove_cofactors — remove_cofactors","text":"reaction_network reaction network SIF format, like one returned model_to_pathway_sif compound_list KEGGREST coumpound list","code":""},{"path":"/reference/remove_cofactors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"remove_cofactors — remove_cofactors","text":"reaction network SIF format corresponding attribute dataframe","code":""},{"path":"/reference/runLimma.html","id":null,"dir":"Reference","previous_headings":"","what":"runLimma — runLimma","title":"runLimma — runLimma","text":"function wrapper limma made facilitate use limma differential analysis","code":""},{"path":"/reference/runLimma.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"runLimma — runLimma","text":"","code":"runLimma(measurements, targets, comparisons = NULL, regress_out = NULL)"},{"path":"/reference/runLimma.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"runLimma — runLimma","text":"targets n*2 dataframe, n number samples. First column correspond samples, second column correspond conditions. comparisons list numeric vectors. vector represent condition conpared. Example : c(2,-1) means first condition substracted second condition. Vectors can two element complex contrasts. regress_out case user exclude possible confounding factors analysis, user can provide additional columns targets dataframe. , confounding factor can regressed indicating number column target dataframe describing . one factor can regressed present time. measurments measurment n*m dataframe (n number omic features, m number samples) columns ordered conditions.","code":""},{"path":"/reference/runLimma.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"runLimma — runLimma","text":"list. First element limma model fitted contrast matrix, usual output limma. Second element contrast matrix used. third element fitted limma object without contrasts.","code":""},{"path":"/reference/split_transaminases.html","id":null,"dir":"Reference","previous_headings":"","what":"split_transaminases — split_transaminases","title":"split_transaminases — split_transaminases","text":"function removes cofactors reaction networks generate model_to_pathway_sif function","code":""},{"path":"/reference/split_transaminases.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"split_transaminases — split_transaminases","text":"","code":"split_transaminases(sub_network_nocofact)"},{"path":"/reference/split_transaminases.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"split_transaminases — split_transaminases","text":"sub_network_nocofact ipsum...","code":""},{"path":"/reference/split_transaminases.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"split_transaminases — split_transaminases","text":"ipsum...","code":""},{"path":"/reference/t_table_metactivity_input_formater.html","id":null,"dir":"Reference","previous_headings":"","what":"t_table_metactivity_input_formater — t_table_metactivity_input_formater","title":"t_table_metactivity_input_formater — t_table_metactivity_input_formater","text":"function allows format table t-values (log2FCs) metactivity function. Essentially, adds compartment code (using BIGG nomenclature) end metabolite identifier, can mapped compartmentalized reaction prior knowledge network.","code":""},{"path":"/reference/t_table_metactivity_input_formater.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"t_table_metactivity_input_formater — t_table_metactivity_input_formater","text":"","code":"t_table_metactivity_input_formater(   metabolomic_t_table,   mapping_table,   affixes = c(\"c\", \"l\", \"x\", \"m\", \"e\", \"n\", \"r\") )"},{"path":"/reference/t_table_metactivity_input_formater.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"t_table_metactivity_input_formater — t_table_metactivity_input_formater","text":"metabolomic_t_table metabolomic t-table (log2FC table) returned ttop_list_to_t_table (ttop_list_to_log2FC_table) mapping_table mapping table translate metabolite identifiers t-table KEGG IDs affixes character vectors corresponding compartment affixes considered. wish focus one compartment, e.g. mitochondria, can input c(\"m\") example.","code":""},{"path":"/reference/t_table_metactivity_input_formater.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"t_table_metactivity_input_formater — t_table_metactivity_input_formater","text":"formatted t-table (log2FC table) use metactivity function","code":""},{"path":"/reference/target_set_from_forest_2.html","id":null,"dir":"Reference","previous_headings":"","what":"target_set_from_forest_2 — target_set_from_forest_2","title":"target_set_from_forest_2 — target_set_from_forest_2","text":"function converts 'forest' representation metabolic network metabolic-enzyme set","code":""},{"path":"/reference/target_set_from_forest_2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"target_set_from_forest_2 — target_set_from_forest_2","text":"","code":"target_set_from_forest_2(forest, measured_species, penalty = 0.5, verbose = T)"},{"path":"/reference/target_set_from_forest_2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"target_set_from_forest_2 — target_set_from_forest_2","text":"forest forest representation metabolic network. can used tree_without_cofactor measured_species character vector, names metabolites measured. Must coherents identifers forest penalty numeric, penalty, 0.1 0.9 (0 1 work well special cases used) verbose boolean, display progress","code":""},{"path":"/reference/target_set_from_forest_2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"target_set_from_forest_2 — target_set_from_forest_2","text":"reaction network form three column dataframe enzme, metabolite targets weights.","code":""},{"path":"/reference/translate_complexes.html","id":null,"dir":"Reference","previous_headings":"","what":"translate_complexes — translate_complexes","title":"translate_complexes — translate_complexes","text":"Function separate complexes vector enzyme strings, map identifiers enzyme name using recon2_redhuman, give back full source/target network enzymes, metabolites translated complexes.","code":""},{"path":"/reference/translate_complexes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"translate_complexes — translate_complexes","text":"","code":"translate_complexes(Network)"},{"path":"/reference/translate_complexes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"translate_complexes — translate_complexes","text":"Network source/target network containing enzymes, complexes, metabolites","code":""},{"path":"/reference/translate_complexes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"translate_complexes — translate_complexes","text":"source/target network containing enzymes, translated complexes, metabolites","code":""},{"path":"/reference/translate_results.html","id":null,"dir":"Reference","previous_headings":"","what":"translate_results — translate_results","title":"translate_results — translate_results","text":"ipsum...","code":""},{"path":"/reference/translate_results.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"translate_results — translate_results","text":"","code":"translate_results(   regulons_df,   t_table,   mapping_table,   compress_compartments = F )"},{"path":"/reference/translate_results.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"translate_results — translate_results","text":"regulons_df ipsum... t_table ipsum... mapping_table ipsum...","code":""},{"path":"/reference/translate_results.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"translate_results — translate_results","text":"ipsum...","code":""},{"path":"/reference/ttopFormatter.html","id":null,"dir":"Reference","previous_headings":"","what":"ttopFormatter — ttopFormatter","title":"ttopFormatter — ttopFormatter","text":"function simply designed format toptable limma first column gene identifiers instead row.names.","code":""},{"path":"/reference/ttopFormatter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ttopFormatter — ttopFormatter","text":"","code":"ttopFormatter(ttop)"},{"path":"/reference/ttopFormatter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ttopFormatter — ttopFormatter","text":"ttop toptable dataframe generated topTable function limma","code":""},{"path":"/reference/ttopFormatter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ttopFormatter — ttopFormatter","text":"dataframe similar output topTable function limma first column IDs instead onyl row.names.","code":""},{"path":"/reference/ttop_list_to_log2FC_table.html","id":null,"dir":"Reference","previous_headings":"","what":"ttop_list_to_log2FC_table — ttop_list_to_log2FC_table","title":"ttop_list_to_log2FC_table — ttop_list_to_log2FC_table","text":"ttop_list_to_t_table, log2FC instead t-values","code":""},{"path":"/reference/ttop_list_to_log2FC_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ttop_list_to_log2FC_table — ttop_list_to_log2FC_table","text":"","code":"ttop_list_to_log2FC_table(ttop_list)"},{"path":"/reference/ttop_list_to_log2FC_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ttop_list_to_log2FC_table — ttop_list_to_log2FC_table","text":"ttop_list list limma top table results obtained limma_res_to_ttop_list","code":""},{"path":"/reference/ttop_list_to_log2FC_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ttop_list_to_log2FC_table — ttop_list_to_log2FC_table","text":"data.frame t-values, columns contrasts rows omic features tested","code":""},{"path":"/reference/ttop_list_to_t_table.html","id":null,"dir":"Reference","previous_headings":"","what":"ttop_list_to_t_table — ttop_list_to_t_table","title":"ttop_list_to_t_table — ttop_list_to_t_table","text":"function converts list limma top table results single dataframe t-values. list top table results can obtained using limma_res_to_ttop_list function","code":""},{"path":"/reference/ttop_list_to_t_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ttop_list_to_t_table — ttop_list_to_t_table","text":"","code":"ttop_list_to_t_table(ttop_list)"},{"path":"/reference/ttop_list_to_t_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ttop_list_to_t_table — ttop_list_to_t_table","text":"ttop_list list limma top table results obtained limma_res_to_ttop_list","code":""},{"path":"/reference/ttop_list_to_t_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ttop_list_to_t_table — ttop_list_to_t_table","text":"data.frame t-values, columns contrasts rows omic features tested","code":""}]
